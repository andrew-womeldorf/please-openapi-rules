/*
 * OpenAPI Validate
 *
 * Super simple OpenAPI Spec
 *
 * API version: 0.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package validate

import (
	"context"
	"errors"
	"net/http"
)

// OverwrittenApiService is a service that implements the logic for the OverwrittenApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type OverwrittenApiService struct {
}

// NewOverwrittenApiService creates a Overwritten api service
func NewOverwrittenApiService() DefaultApiServicer {
	return &OverwrittenApiService{}
}

// AddPet - Add a new pet to the store
func (s *OverwrittenApiService) AddPet(ctx context.Context, pet Pet) (ImplResponse, error) {
	// TODO - update AddPet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Pet{}) or use other options such as http.Ok ...
	return Response(200, Pet{}), nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	return Response(405, nil), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddPet method not implemented")
}

// GetPetById - Get a single Pet by it&#39;s ID
func (s *OverwrittenApiService) GetPetById(ctx context.Context, petId int64) (ImplResponse, error) {
	// TODO - update GetPetById with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Pet{}) or use other options such as http.Ok ...
	return Response(200, Pet{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	return Response(400, nil), nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	return Response(404, nil), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPetById method not implemented")
}
